/*
 * generated by Xtext 2.19.0
 */
package org.xtext.example.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.example.ide.contentassist.antlr.internal.InternalBrowserParser;
import org.xtext.example.services.BrowserGrammarAccess;

public class BrowserParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(BrowserGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, BrowserGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getLinesAccess().getAlternatives(), "rule__Lines__Alternatives");
			builder.put(grammarAccess.getTypeAccess().getTypeAlternatives_0(), "rule__Type__TypeAlternatives_0");
			builder.put(grammarAccess.getVariableAccess().getAlternatives(), "rule__Variable__Alternatives");
			builder.put(grammarAccess.getFunctionCallAccess().getAlternatives(), "rule__FunctionCall__Alternatives");
			builder.put(grammarAccess.getExpressionAccess().getAlternatives(), "rule__Expression__Alternatives");
			builder.put(grammarAccess.getWebDriverTypeAccess().getAlternatives(), "rule__WebDriverType__Alternatives");
			builder.put(grammarAccess.getWebElementTypeAccess().getAlternatives(), "rule__WebElementType__Alternatives");
			builder.put(grammarAccess.getInterractionsAccess().getAlternatives(), "rule__Interractions__Alternatives");
			builder.put(grammarAccess.getInsertAccess().getAlternatives(), "rule__Insert__Alternatives");
			builder.put(grammarAccess.getDeclarationAccess().getGroup(), "rule__Declaration__Group__0");
			builder.put(grammarAccess.getAffectationAccess().getGroup(), "rule__Affectation__Group__0");
			builder.put(grammarAccess.getLinkAccess().getGroup(), "rule__Link__Group__0");
			builder.put(grammarAccess.getInputAccess().getGroup(), "rule__Input__Group__0");
			builder.put(grammarAccess.getButtonAccess().getGroup(), "rule__Button__Group__0");
			builder.put(grammarAccess.getTextAccess().getGroup(), "rule__Text__Group__0");
			builder.put(grammarAccess.getCheckboxAccess().getGroup(), "rule__Checkbox__Group__0");
			builder.put(grammarAccess.getComboboxAccess().getGroup(), "rule__Combobox__Group__0");
			builder.put(grammarAccess.getImageAccess().getGroup(), "rule__Image__Group__0");
			builder.put(grammarAccess.getGoAccess().getGroup(), "rule__Go__Group__0");
			builder.put(grammarAccess.getContainsAccess().getGroup(), "rule__Contains__Group__0");
			builder.put(grammarAccess.getClickAccess().getGroup(), "rule__Click__Group__0");
			builder.put(grammarAccess.getReadElementAccess().getGroup(), "rule__ReadElement__Group__0");
			builder.put(grammarAccess.getCheckContainsLinkAccess().getGroup(), "rule__CheckContainsLink__Group__0");
			builder.put(grammarAccess.getCheckContainsTextAccess().getGroup(), "rule__CheckContainsText__Group__0");
			builder.put(grammarAccess.getFindPropertyAccess().getGroup(), "rule__FindProperty__Group__0");
			builder.put(grammarAccess.getFindFirstPropertyAccess().getGroup(), "rule__FindFirstProperty__Group__0");
			builder.put(grammarAccess.getFindSecondPropertyAccess().getGroup(), "rule__FindSecondProperty__Group__0");
			builder.put(grammarAccess.getGetTitleAccess().getGroup(), "rule__GetTitle__Group__0");
			builder.put(grammarAccess.getInsertAccess().getGroup_0(), "rule__Insert__Group_0__0");
			builder.put(grammarAccess.getInsertAccess().getGroup_1(), "rule__Insert__Group_1__0");
			builder.put(grammarAccess.getCheckCheckboxAccess().getGroup(), "rule__CheckCheckbox__Group__0");
			builder.put(grammarAccess.getClearCheckboxAccess().getGroup(), "rule__ClearCheckbox__Group__0");
			builder.put(grammarAccess.getSelectComboboxAccess().getGroup(), "rule__SelectCombobox__Group__0");
			builder.put(grammarAccess.getProgramAccess().getLinesAssignment(), "rule__Program__LinesAssignment");
			builder.put(grammarAccess.getDeclarationAccess().getTypeAssignment_0(), "rule__Declaration__TypeAssignment_0");
			builder.put(grammarAccess.getDeclarationAccess().getVarAssignment_1(), "rule__Declaration__VarAssignment_1");
			builder.put(grammarAccess.getTypeAccess().getTypeAssignment(), "rule__Type__TypeAssignment");
			builder.put(grammarAccess.getVariableAccess().getNameAssignment_0(), "rule__Variable__NameAssignment_0");
			builder.put(grammarAccess.getAffectationAccess().getRefAssignment_0(), "rule__Affectation__RefAssignment_0");
			builder.put(grammarAccess.getAffectationAccess().getExprAssignment_2(), "rule__Affectation__ExprAssignment_2");
			builder.put(grammarAccess.getVarReferenceAccess().getValAssignment(), "rule__VarReference__ValAssignment");
			builder.put(grammarAccess.getLinkAccess().getNameAssignment_1(), "rule__Link__NameAssignment_1");
			builder.put(grammarAccess.getLinkAccess().getUrlAssignment_2(), "rule__Link__UrlAssignment_2");
			builder.put(grammarAccess.getLinkAccess().getClassAssignment_3(), "rule__Link__ClassAssignment_3");
			builder.put(grammarAccess.getInputAccess().getNameAssignment_1(), "rule__Input__NameAssignment_1");
			builder.put(grammarAccess.getInputAccess().getValueAssignment_2(), "rule__Input__ValueAssignment_2");
			builder.put(grammarAccess.getInputAccess().getTypeAssignment_3(), "rule__Input__TypeAssignment_3");
			builder.put(grammarAccess.getInputAccess().getClassAssignment_4(), "rule__Input__ClassAssignment_4");
			builder.put(grammarAccess.getButtonAccess().getNameAssignment_1(), "rule__Button__NameAssignment_1");
			builder.put(grammarAccess.getButtonAccess().getValueAssignment_2(), "rule__Button__ValueAssignment_2");
			builder.put(grammarAccess.getButtonAccess().getClassAssignment_3(), "rule__Button__ClassAssignment_3");
			builder.put(grammarAccess.getTextAccess().getNameAssignment_1(), "rule__Text__NameAssignment_1");
			builder.put(grammarAccess.getTextAccess().getValueAssignment_2(), "rule__Text__ValueAssignment_2");
			builder.put(grammarAccess.getTextAccess().getClassAssignment_3(), "rule__Text__ClassAssignment_3");
			builder.put(grammarAccess.getCheckboxAccess().getNameAssignment_1(), "rule__Checkbox__NameAssignment_1");
			builder.put(grammarAccess.getCheckboxAccess().getValueAssignment_2(), "rule__Checkbox__ValueAssignment_2");
			builder.put(grammarAccess.getCheckboxAccess().getClassAssignment_3(), "rule__Checkbox__ClassAssignment_3");
			builder.put(grammarAccess.getComboboxAccess().getNameAssignment_1(), "rule__Combobox__NameAssignment_1");
			builder.put(grammarAccess.getComboboxAccess().getValueAssignment_2(), "rule__Combobox__ValueAssignment_2");
			builder.put(grammarAccess.getComboboxAccess().getClassAssignment_3(), "rule__Combobox__ClassAssignment_3");
			builder.put(grammarAccess.getImageAccess().getValueAssignment_1(), "rule__Image__ValueAssignment_1");
			builder.put(grammarAccess.getImageAccess().getClassAssignment_2(), "rule__Image__ClassAssignment_2");
			builder.put(grammarAccess.getGoAccess().getValAssignment_0(), "rule__Go__ValAssignment_0");
			builder.put(grammarAccess.getGoAccess().getUrlAssignment_2(), "rule__Go__UrlAssignment_2");
			builder.put(grammarAccess.getContainsAccess().getValAssignment_0(), "rule__Contains__ValAssignment_0");
			builder.put(grammarAccess.getContainsAccess().getParamAssignment_2(), "rule__Contains__ParamAssignment_2");
			builder.put(grammarAccess.getClickAccess().getValAssignment_0(), "rule__Click__ValAssignment_0");
			builder.put(grammarAccess.getReadElementAccess().getRefAssignment_0(), "rule__ReadElement__RefAssignment_0");
			builder.put(grammarAccess.getReadElementAccess().getValAssignment_2(), "rule__ReadElement__ValAssignment_2");
			builder.put(grammarAccess.getCheckContainsLinkAccess().getValAssignment_0(), "rule__CheckContainsLink__ValAssignment_0");
			builder.put(grammarAccess.getCheckContainsLinkAccess().getNameAssignment_2(), "rule__CheckContainsLink__NameAssignment_2");
			builder.put(grammarAccess.getCheckContainsLinkAccess().getParamAssignment_4(), "rule__CheckContainsLink__ParamAssignment_4");
			builder.put(grammarAccess.getCheckContainsTextAccess().getValAssignment_0(), "rule__CheckContainsText__ValAssignment_0");
			builder.put(grammarAccess.getCheckContainsTextAccess().getNameAssignment_2(), "rule__CheckContainsText__NameAssignment_2");
			builder.put(grammarAccess.getCheckContainsTextAccess().getParamAssignment_4(), "rule__CheckContainsText__ParamAssignment_4");
			builder.put(grammarAccess.getFindPropertyAccess().getRefAssignment_0(), "rule__FindProperty__RefAssignment_0");
			builder.put(grammarAccess.getFindPropertyAccess().getValAssignment_2(), "rule__FindProperty__ValAssignment_2");
			builder.put(grammarAccess.getFindPropertyAccess().getNameAssignment_4(), "rule__FindProperty__NameAssignment_4");
			builder.put(grammarAccess.getFindPropertyAccess().getParamAssignment_6(), "rule__FindProperty__ParamAssignment_6");
			builder.put(grammarAccess.getFindFirstPropertyAccess().getRefAssignment_0(), "rule__FindFirstProperty__RefAssignment_0");
			builder.put(grammarAccess.getFindFirstPropertyAccess().getValAssignment_2(), "rule__FindFirstProperty__ValAssignment_2");
			builder.put(grammarAccess.getFindFirstPropertyAccess().getNameAssignment_4(), "rule__FindFirstProperty__NameAssignment_4");
			builder.put(grammarAccess.getFindFirstPropertyAccess().getParamAssignment_6(), "rule__FindFirstProperty__ParamAssignment_6");
			builder.put(grammarAccess.getFindSecondPropertyAccess().getRefAssignment_0(), "rule__FindSecondProperty__RefAssignment_0");
			builder.put(grammarAccess.getFindSecondPropertyAccess().getValAssignment_2(), "rule__FindSecondProperty__ValAssignment_2");
			builder.put(grammarAccess.getFindSecondPropertyAccess().getNameAssignment_4(), "rule__FindSecondProperty__NameAssignment_4");
			builder.put(grammarAccess.getFindSecondPropertyAccess().getParamAssignment_6(), "rule__FindSecondProperty__ParamAssignment_6");
			builder.put(grammarAccess.getGetTitleAccess().getValAssignment_0(), "rule__GetTitle__ValAssignment_0");
			builder.put(grammarAccess.getInsertAccess().getValAssignment_0_0(), "rule__Insert__ValAssignment_0_0");
			builder.put(grammarAccess.getInsertAccess().getParamAssignment_0_2(), "rule__Insert__ParamAssignment_0_2");
			builder.put(grammarAccess.getInsertAccess().getRefAssignment_1_0(), "rule__Insert__RefAssignment_1_0");
			builder.put(grammarAccess.getCheckCheckboxAccess().getValAssignment_0(), "rule__CheckCheckbox__ValAssignment_0");
			builder.put(grammarAccess.getClearCheckboxAccess().getValAssignment_0(), "rule__ClearCheckbox__ValAssignment_0");
			builder.put(grammarAccess.getSelectComboboxAccess().getValAssignment_0(), "rule__SelectCombobox__ValAssignment_0");
			builder.put(grammarAccess.getSelectComboboxAccess().getParamAssignment_2(), "rule__SelectCombobox__ParamAssignment_2");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private BrowserGrammarAccess grammarAccess;

	@Override
	protected InternalBrowserParser createParser() {
		InternalBrowserParser result = new InternalBrowserParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public BrowserGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(BrowserGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
