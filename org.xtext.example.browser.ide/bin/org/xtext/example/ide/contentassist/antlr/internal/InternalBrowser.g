/*
 * generated by Xtext 2.19.0
 */
grammar InternalBrowser;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.services.BrowserGrammarAccess;

}
@parser::members {
	private BrowserGrammarAccess grammarAccess;

	public void setGrammarAccess(BrowserGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleProgram
entryRuleProgram
:
{ before(grammarAccess.getProgramRule()); }
	 ruleProgram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;

// Rule Program
ruleProgram 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProgramAccess().getLinesAssignment()); }
		(rule__Program__LinesAssignment)*
		{ after(grammarAccess.getProgramAccess().getLinesAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLines
entryRuleLines
:
{ before(grammarAccess.getLinesRule()); }
	 ruleLines
{ after(grammarAccess.getLinesRule()); } 
	 EOF 
;

// Rule Lines
ruleLines 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLinesAccess().getAlternatives()); }
		(rule__Lines__Alternatives)
		{ after(grammarAccess.getLinesAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeclaration
entryRuleDeclaration
:
{ before(grammarAccess.getDeclarationRule()); }
	 ruleDeclaration
{ after(grammarAccess.getDeclarationRule()); } 
	 EOF 
;

// Rule Declaration
ruleDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclarationAccess().getGroup()); }
		(rule__Declaration__Group__0)
		{ after(grammarAccess.getDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getTypeAssignment()); }
		(rule__Type__TypeAssignment)
		{ after(grammarAccess.getTypeAccess().getTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariable
entryRuleVariable
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableAccess().getAlternatives()); }
		(rule__Variable__Alternatives)
		{ after(grammarAccess.getVariableAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAffectation
entryRuleAffectation
:
{ before(grammarAccess.getAffectationRule()); }
	 ruleAffectation
{ after(grammarAccess.getAffectationRule()); } 
	 EOF 
;

// Rule Affectation
ruleAffectation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAffectationAccess().getGroup()); }
		(rule__Affectation__Group__0)
		{ after(grammarAccess.getAffectationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVarReference
entryRuleVarReference
:
{ before(grammarAccess.getVarReferenceRule()); }
	 ruleVarReference
{ after(grammarAccess.getVarReferenceRule()); } 
	 EOF 
;

// Rule VarReference
ruleVarReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarReferenceAccess().getValAssignment()); }
		(rule__VarReference__ValAssignment)
		{ after(grammarAccess.getVarReferenceAccess().getValAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionCall
entryRuleFunctionCall
:
{ before(grammarAccess.getFunctionCallRule()); }
	 ruleFunctionCall
{ after(grammarAccess.getFunctionCallRule()); } 
	 EOF 
;

// Rule FunctionCall
ruleFunctionCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionCallAccess().getAlternatives()); }
		(rule__FunctionCall__Alternatives)
		{ after(grammarAccess.getFunctionCallAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
		(rule__Expression__Alternatives)
		{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWebDriverType
entryRuleWebDriverType
:
{ before(grammarAccess.getWebDriverTypeRule()); }
	 ruleWebDriverType
{ after(grammarAccess.getWebDriverTypeRule()); } 
	 EOF 
;

// Rule WebDriverType
ruleWebDriverType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWebDriverTypeAccess().getAlternatives()); }
		(rule__WebDriverType__Alternatives)
		{ after(grammarAccess.getWebDriverTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWebElementType
entryRuleWebElementType
:
{ before(grammarAccess.getWebElementTypeRule()); }
	 ruleWebElementType
{ after(grammarAccess.getWebElementTypeRule()); } 
	 EOF 
;

// Rule WebElementType
ruleWebElementType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWebElementTypeAccess().getAlternatives()); }
		(rule__WebElementType__Alternatives)
		{ after(grammarAccess.getWebElementTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWebElementVarReference
entryRuleWebElementVarReference
:
{ before(grammarAccess.getWebElementVarReferenceRule()); }
	 ruleWebElementVarReference
{ after(grammarAccess.getWebElementVarReferenceRule()); } 
	 EOF 
;

// Rule WebElementVarReference
ruleWebElementVarReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWebElementVarReferenceAccess().getVarReferenceParserRuleCall()); }
		ruleVarReference
		{ after(grammarAccess.getWebElementVarReferenceAccess().getVarReferenceParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWebDriverVarReference
entryRuleWebDriverVarReference
:
{ before(grammarAccess.getWebDriverVarReferenceRule()); }
	 ruleWebDriverVarReference
{ after(grammarAccess.getWebDriverVarReferenceRule()); } 
	 EOF 
;

// Rule WebDriverVarReference
ruleWebDriverVarReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWebDriverVarReferenceAccess().getVarReferenceParserRuleCall()); }
		ruleVarReference
		{ after(grammarAccess.getWebDriverVarReferenceAccess().getVarReferenceParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLink
entryRuleLink
:
{ before(grammarAccess.getLinkRule()); }
	 ruleLink
{ after(grammarAccess.getLinkRule()); } 
	 EOF 
;

// Rule Link
ruleLink 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLinkAccess().getGroup()); }
		(rule__Link__Group__0)
		{ after(grammarAccess.getLinkAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInput
entryRuleInput
:
{ before(grammarAccess.getInputRule()); }
	 ruleInput
{ after(grammarAccess.getInputRule()); } 
	 EOF 
;

// Rule Input
ruleInput 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInputAccess().getGroup()); }
		(rule__Input__Group__0)
		{ after(grammarAccess.getInputAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleButton
entryRuleButton
:
{ before(grammarAccess.getButtonRule()); }
	 ruleButton
{ after(grammarAccess.getButtonRule()); } 
	 EOF 
;

// Rule Button
ruleButton 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getButtonAccess().getGroup()); }
		(rule__Button__Group__0)
		{ after(grammarAccess.getButtonAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleText
entryRuleText
:
{ before(grammarAccess.getTextRule()); }
	 ruleText
{ after(grammarAccess.getTextRule()); } 
	 EOF 
;

// Rule Text
ruleText 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTextAccess().getGroup()); }
		(rule__Text__Group__0)
		{ after(grammarAccess.getTextAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCheckbox
entryRuleCheckbox
:
{ before(grammarAccess.getCheckboxRule()); }
	 ruleCheckbox
{ after(grammarAccess.getCheckboxRule()); } 
	 EOF 
;

// Rule Checkbox
ruleCheckbox 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCheckboxAccess().getGroup()); }
		(rule__Checkbox__Group__0)
		{ after(grammarAccess.getCheckboxAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCombobox
entryRuleCombobox
:
{ before(grammarAccess.getComboboxRule()); }
	 ruleCombobox
{ after(grammarAccess.getComboboxRule()); } 
	 EOF 
;

// Rule Combobox
ruleCombobox 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComboboxAccess().getGroup()); }
		(rule__Combobox__Group__0)
		{ after(grammarAccess.getComboboxAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleListValue
entryRuleListValue
:
{ before(grammarAccess.getListValueRule()); }
	 ruleListValue
{ after(grammarAccess.getListValueRule()); } 
	 EOF 
;

// Rule ListValue
ruleListValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getListValueAccess().getSTRINGTerminalRuleCall()); }
		(RULE_STRING)*
		{ after(grammarAccess.getListValueAccess().getSTRINGTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImage
entryRuleImage
:
{ before(grammarAccess.getImageRule()); }
	 ruleImage
{ after(grammarAccess.getImageRule()); } 
	 EOF 
;

// Rule Image
ruleImage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImageAccess().getGroup()); }
		(rule__Image__Group__0)
		{ after(grammarAccess.getImageAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGo
entryRuleGo
:
{ before(grammarAccess.getGoRule()); }
	 ruleGo
{ after(grammarAccess.getGoRule()); } 
	 EOF 
;

// Rule Go
ruleGo 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGoAccess().getGroup()); }
		(rule__Go__Group__0)
		{ after(grammarAccess.getGoAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContains
entryRuleContains
:
{ before(grammarAccess.getContainsRule()); }
	 ruleContains
{ after(grammarAccess.getContainsRule()); } 
	 EOF 
;

// Rule Contains
ruleContains 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContainsAccess().getGroup()); }
		(rule__Contains__Group__0)
		{ after(grammarAccess.getContainsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInterractions
entryRuleInterractions
:
{ before(grammarAccess.getInterractionsRule()); }
	 ruleInterractions
{ after(grammarAccess.getInterractionsRule()); } 
	 EOF 
;

// Rule Interractions
ruleInterractions 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInterractionsAccess().getAlternatives()); }
		(rule__Interractions__Alternatives)
		{ after(grammarAccess.getInterractionsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClick
entryRuleClick
:
{ before(grammarAccess.getClickRule()); }
	 ruleClick
{ after(grammarAccess.getClickRule()); } 
	 EOF 
;

// Rule Click
ruleClick 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClickAccess().getGroup()); }
		(rule__Click__Group__0)
		{ after(grammarAccess.getClickAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReadElement
entryRuleReadElement
:
{ before(grammarAccess.getReadElementRule()); }
	 ruleReadElement
{ after(grammarAccess.getReadElementRule()); } 
	 EOF 
;

// Rule ReadElement
ruleReadElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReadElementAccess().getGroup()); }
		(rule__ReadElement__Group__0)
		{ after(grammarAccess.getReadElementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCheckContainsLink
entryRuleCheckContainsLink
:
{ before(grammarAccess.getCheckContainsLinkRule()); }
	 ruleCheckContainsLink
{ after(grammarAccess.getCheckContainsLinkRule()); } 
	 EOF 
;

// Rule CheckContainsLink
ruleCheckContainsLink 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCheckContainsLinkAccess().getGroup()); }
		(rule__CheckContainsLink__Group__0)
		{ after(grammarAccess.getCheckContainsLinkAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCheckContainsText
entryRuleCheckContainsText
:
{ before(grammarAccess.getCheckContainsTextRule()); }
	 ruleCheckContainsText
{ after(grammarAccess.getCheckContainsTextRule()); } 
	 EOF 
;

// Rule CheckContainsText
ruleCheckContainsText 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCheckContainsTextAccess().getGroup()); }
		(rule__CheckContainsText__Group__0)
		{ after(grammarAccess.getCheckContainsTextAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFindProperty
entryRuleFindProperty
:
{ before(grammarAccess.getFindPropertyRule()); }
	 ruleFindProperty
{ after(grammarAccess.getFindPropertyRule()); } 
	 EOF 
;

// Rule FindProperty
ruleFindProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFindPropertyAccess().getGroup()); }
		(rule__FindProperty__Group__0)
		{ after(grammarAccess.getFindPropertyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFindFirstProperty
entryRuleFindFirstProperty
:
{ before(grammarAccess.getFindFirstPropertyRule()); }
	 ruleFindFirstProperty
{ after(grammarAccess.getFindFirstPropertyRule()); } 
	 EOF 
;

// Rule FindFirstProperty
ruleFindFirstProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFindFirstPropertyAccess().getGroup()); }
		(rule__FindFirstProperty__Group__0)
		{ after(grammarAccess.getFindFirstPropertyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFindSecondProperty
entryRuleFindSecondProperty
:
{ before(grammarAccess.getFindSecondPropertyRule()); }
	 ruleFindSecondProperty
{ after(grammarAccess.getFindSecondPropertyRule()); } 
	 EOF 
;

// Rule FindSecondProperty
ruleFindSecondProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFindSecondPropertyAccess().getGroup()); }
		(rule__FindSecondProperty__Group__0)
		{ after(grammarAccess.getFindSecondPropertyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGetTitle
entryRuleGetTitle
:
{ before(grammarAccess.getGetTitleRule()); }
	 ruleGetTitle
{ after(grammarAccess.getGetTitleRule()); } 
	 EOF 
;

// Rule GetTitle
ruleGetTitle 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGetTitleAccess().getGroup()); }
		(rule__GetTitle__Group__0)
		{ after(grammarAccess.getGetTitleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInsert
entryRuleInsert
:
{ before(grammarAccess.getInsertRule()); }
	 ruleInsert
{ after(grammarAccess.getInsertRule()); } 
	 EOF 
;

// Rule Insert
ruleInsert 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInsertAccess().getAlternatives()); }
		(rule__Insert__Alternatives)
		{ after(grammarAccess.getInsertAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCheckCheckbox
entryRuleCheckCheckbox
:
{ before(grammarAccess.getCheckCheckboxRule()); }
	 ruleCheckCheckbox
{ after(grammarAccess.getCheckCheckboxRule()); } 
	 EOF 
;

// Rule CheckCheckbox
ruleCheckCheckbox 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCheckCheckboxAccess().getGroup()); }
		(rule__CheckCheckbox__Group__0)
		{ after(grammarAccess.getCheckCheckboxAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClearCheckbox
entryRuleClearCheckbox
:
{ before(grammarAccess.getClearCheckboxRule()); }
	 ruleClearCheckbox
{ after(grammarAccess.getClearCheckboxRule()); } 
	 EOF 
;

// Rule ClearCheckbox
ruleClearCheckbox 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClearCheckboxAccess().getGroup()); }
		(rule__ClearCheckbox__Group__0)
		{ after(grammarAccess.getClearCheckboxAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelectCombobox
entryRuleSelectCombobox
:
{ before(grammarAccess.getSelectComboboxRule()); }
	 ruleSelectCombobox
{ after(grammarAccess.getSelectComboboxRule()); } 
	 EOF 
;

// Rule SelectCombobox
ruleSelectCombobox 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectComboboxAccess().getGroup()); }
		(rule__SelectCombobox__Group__0)
		{ after(grammarAccess.getSelectComboboxAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Lines__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinesAccess().getDeclarationParserRuleCall_0()); }
		ruleDeclaration
		{ after(grammarAccess.getLinesAccess().getDeclarationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getLinesAccess().getAffectationParserRuleCall_1()); }
		ruleAffectation
		{ after(grammarAccess.getLinesAccess().getAffectationParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getLinesAccess().getFunctionCallParserRuleCall_2()); }
		ruleFunctionCall
		{ after(grammarAccess.getLinesAccess().getFunctionCallParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getLinesAccess().getCheckContainsLinkParserRuleCall_3()); }
		ruleCheckContainsLink
		{ after(grammarAccess.getLinesAccess().getCheckContainsLinkParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getLinesAccess().getCheckContainsTextParserRuleCall_4()); }
		ruleCheckContainsText
		{ after(grammarAccess.getLinesAccess().getCheckContainsTextParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getLinesAccess().getFindPropertyParserRuleCall_5()); }
		ruleFindProperty
		{ after(grammarAccess.getLinesAccess().getFindPropertyParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getLinesAccess().getFindFirstPropertyParserRuleCall_6()); }
		ruleFindFirstProperty
		{ after(grammarAccess.getLinesAccess().getFindFirstPropertyParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getLinesAccess().getFindSecondPropertyParserRuleCall_7()); }
		ruleFindSecondProperty
		{ after(grammarAccess.getLinesAccess().getFindSecondPropertyParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getLinesAccess().getGetTitleParserRuleCall_8()); }
		ruleGetTitle
		{ after(grammarAccess.getLinesAccess().getGetTitleParserRuleCall_8()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__TypeAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getTypeWebDriverKeyword_0_0()); }
		'WebDriver'
		{ after(grammarAccess.getTypeAccess().getTypeWebDriverKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getTypeWebElementKeyword_0_1()); }
		'WebElement'
		{ after(grammarAccess.getTypeAccess().getTypeWebElementKeyword_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getTypeStringKeyword_0_2()); }
		'String'
		{ after(grammarAccess.getTypeAccess().getTypeStringKeyword_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getNameAssignment_0()); }
		(rule__Variable__NameAssignment_0)
		{ after(grammarAccess.getVariableAccess().getNameAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariableAccess().getURLTerminalRuleCall_1()); }
		RULE_URL
		{ after(grammarAccess.getVariableAccess().getURLTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallAccess().getGoParserRuleCall_0()); }
		ruleGo
		{ after(grammarAccess.getFunctionCallAccess().getGoParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionCallAccess().getContainsParserRuleCall_1()); }
		ruleContains
		{ after(grammarAccess.getFunctionCallAccess().getContainsParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionCallAccess().getInterractionsParserRuleCall_2()); }
		ruleInterractions
		{ after(grammarAccess.getFunctionCallAccess().getInterractionsParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getWebDriverTypeParserRuleCall_0()); }
		ruleWebDriverType
		{ after(grammarAccess.getExpressionAccess().getWebDriverTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getWebElementTypeParserRuleCall_1()); }
		ruleWebElementType
		{ after(grammarAccess.getExpressionAccess().getWebElementTypeParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getSTRINGTerminalRuleCall_2()); }
		RULE_STRING
		{ after(grammarAccess.getExpressionAccess().getSTRINGTerminalRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getURLTerminalRuleCall_3()); }
		RULE_URL
		{ after(grammarAccess.getExpressionAccess().getURLTerminalRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WebDriverType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWebDriverTypeAccess().getFirefoxDriverKeyword_0()); }
		'FirefoxDriver'
		{ after(grammarAccess.getWebDriverTypeAccess().getFirefoxDriverKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getWebDriverTypeAccess().getChromeDriverKeyword_1()); }
		'ChromeDriver'
		{ after(grammarAccess.getWebDriverTypeAccess().getChromeDriverKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getWebDriverTypeAccess().getInternetExplorerDriverKeyword_2()); }
		'InternetExplorerDriver'
		{ after(grammarAccess.getWebDriverTypeAccess().getInternetExplorerDriverKeyword_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WebElementType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWebElementTypeAccess().getLinkParserRuleCall_0()); }
		ruleLink
		{ after(grammarAccess.getWebElementTypeAccess().getLinkParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getWebElementTypeAccess().getInputParserRuleCall_1()); }
		ruleInput
		{ after(grammarAccess.getWebElementTypeAccess().getInputParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getWebElementTypeAccess().getButtonParserRuleCall_2()); }
		ruleButton
		{ after(grammarAccess.getWebElementTypeAccess().getButtonParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getWebElementTypeAccess().getTextParserRuleCall_3()); }
		ruleText
		{ after(grammarAccess.getWebElementTypeAccess().getTextParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getWebElementTypeAccess().getCheckboxParserRuleCall_4()); }
		ruleCheckbox
		{ after(grammarAccess.getWebElementTypeAccess().getCheckboxParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getWebElementTypeAccess().getComboboxParserRuleCall_5()); }
		ruleCombobox
		{ after(grammarAccess.getWebElementTypeAccess().getComboboxParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getWebElementTypeAccess().getImageParserRuleCall_6()); }
		ruleImage
		{ after(grammarAccess.getWebElementTypeAccess().getImageParserRuleCall_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interractions__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInterractionsAccess().getClickParserRuleCall_0()); }
		ruleClick
		{ after(grammarAccess.getInterractionsAccess().getClickParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getInterractionsAccess().getReadElementParserRuleCall_1()); }
		ruleReadElement
		{ after(grammarAccess.getInterractionsAccess().getReadElementParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getInterractionsAccess().getInsertParserRuleCall_2()); }
		ruleInsert
		{ after(grammarAccess.getInterractionsAccess().getInsertParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getInterractionsAccess().getCheckCheckboxParserRuleCall_3()); }
		ruleCheckCheckbox
		{ after(grammarAccess.getInterractionsAccess().getCheckCheckboxParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getInterractionsAccess().getClearCheckboxParserRuleCall_4()); }
		ruleClearCheckbox
		{ after(grammarAccess.getInterractionsAccess().getClearCheckboxParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getInterractionsAccess().getSelectComboboxParserRuleCall_5()); }
		ruleSelectCombobox
		{ after(grammarAccess.getInterractionsAccess().getSelectComboboxParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInsertAccess().getGroup_0()); }
		(rule__Insert__Group_0__0)
		{ after(grammarAccess.getInsertAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getInsertAccess().getGroup_1()); }
		(rule__Insert__Group_1__0)
		{ after(grammarAccess.getInsertAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaration__Group__0__Impl
	rule__Declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarationAccess().getTypeAssignment_0()); }
	(rule__Declaration__TypeAssignment_0)
	{ after(grammarAccess.getDeclarationAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaration__Group__1__Impl
	rule__Declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarationAccess().getVarAssignment_1()); }
	(rule__Declaration__VarAssignment_1)
	{ after(grammarAccess.getDeclarationAccess().getVarAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarationAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getDeclarationAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Affectation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Affectation__Group__0__Impl
	rule__Affectation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAffectationAccess().getRefAssignment_0()); }
	(rule__Affectation__RefAssignment_0)
	{ after(grammarAccess.getAffectationAccess().getRefAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Affectation__Group__1__Impl
	rule__Affectation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAffectationAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getAffectationAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Affectation__Group__2__Impl
	rule__Affectation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAffectationAccess().getExprAssignment_2()); }
	(rule__Affectation__ExprAssignment_2)
	{ after(grammarAccess.getAffectationAccess().getExprAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Affectation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAffectationAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getAffectationAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Link__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group__0__Impl
	rule__Link__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getLinkKeyword_0()); }
	'link'
	{ after(grammarAccess.getLinkAccess().getLinkKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group__1__Impl
	rule__Link__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getNameAssignment_1()); }
	(rule__Link__NameAssignment_1)
	{ after(grammarAccess.getLinkAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group__2__Impl
	rule__Link__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getUrlAssignment_2()); }
	(rule__Link__UrlAssignment_2)
	{ after(grammarAccess.getLinkAccess().getUrlAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getClassAssignment_3()); }
	(rule__Link__ClassAssignment_3)
	{ after(grammarAccess.getLinkAccess().getClassAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Input__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group__0__Impl
	rule__Input__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getInputKeyword_0()); }
	'input'
	{ after(grammarAccess.getInputAccess().getInputKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group__1__Impl
	rule__Input__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getNameAssignment_1()); }
	(rule__Input__NameAssignment_1)
	{ after(grammarAccess.getInputAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group__2__Impl
	rule__Input__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getValueAssignment_2()); }
	(rule__Input__ValueAssignment_2)
	{ after(grammarAccess.getInputAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group__3__Impl
	rule__Input__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getTypeAssignment_3()); }
	(rule__Input__TypeAssignment_3)
	{ after(grammarAccess.getInputAccess().getTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getClassAssignment_4()); }
	(rule__Input__ClassAssignment_4)
	{ after(grammarAccess.getInputAccess().getClassAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Button__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group__0__Impl
	rule__Button__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getButtonKeyword_0()); }
	'button'
	{ after(grammarAccess.getButtonAccess().getButtonKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group__1__Impl
	rule__Button__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getNameAssignment_1()); }
	(rule__Button__NameAssignment_1)
	{ after(grammarAccess.getButtonAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group__2__Impl
	rule__Button__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getValueAssignment_2()); }
	(rule__Button__ValueAssignment_2)
	{ after(grammarAccess.getButtonAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getClassAssignment_3()); }
	(rule__Button__ClassAssignment_3)
	{ after(grammarAccess.getButtonAccess().getClassAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Text__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Text__Group__0__Impl
	rule__Text__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextAccess().getTextKeyword_0()); }
	'text'
	{ after(grammarAccess.getTextAccess().getTextKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Text__Group__1__Impl
	rule__Text__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextAccess().getNameAssignment_1()); }
	(rule__Text__NameAssignment_1)
	{ after(grammarAccess.getTextAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Text__Group__2__Impl
	rule__Text__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextAccess().getValueAssignment_2()); }
	(rule__Text__ValueAssignment_2)
	{ after(grammarAccess.getTextAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Text__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextAccess().getClassAssignment_3()); }
	(rule__Text__ClassAssignment_3)
	{ after(grammarAccess.getTextAccess().getClassAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Checkbox__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Checkbox__Group__0__Impl
	rule__Checkbox__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Checkbox__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckboxAccess().getCheckboxKeyword_0()); }
	'checkbox'
	{ after(grammarAccess.getCheckboxAccess().getCheckboxKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Checkbox__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Checkbox__Group__1__Impl
	rule__Checkbox__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Checkbox__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckboxAccess().getNameAssignment_1()); }
	(rule__Checkbox__NameAssignment_1)
	{ after(grammarAccess.getCheckboxAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Checkbox__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Checkbox__Group__2__Impl
	rule__Checkbox__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Checkbox__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckboxAccess().getValueAssignment_2()); }
	(rule__Checkbox__ValueAssignment_2)
	{ after(grammarAccess.getCheckboxAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Checkbox__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Checkbox__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Checkbox__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckboxAccess().getClassAssignment_3()); }
	(rule__Checkbox__ClassAssignment_3)
	{ after(grammarAccess.getCheckboxAccess().getClassAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Combobox__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Combobox__Group__0__Impl
	rule__Combobox__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Combobox__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComboboxAccess().getComboboxKeyword_0()); }
	'combobox'
	{ after(grammarAccess.getComboboxAccess().getComboboxKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Combobox__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Combobox__Group__1__Impl
	rule__Combobox__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Combobox__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComboboxAccess().getNameAssignment_1()); }
	(rule__Combobox__NameAssignment_1)
	{ after(grammarAccess.getComboboxAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Combobox__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Combobox__Group__2__Impl
	rule__Combobox__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Combobox__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComboboxAccess().getValueAssignment_2()); }
	(rule__Combobox__ValueAssignment_2)
	{ after(grammarAccess.getComboboxAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Combobox__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Combobox__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Combobox__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComboboxAccess().getClassAssignment_3()); }
	(rule__Combobox__ClassAssignment_3)
	{ after(grammarAccess.getComboboxAccess().getClassAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Image__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Image__Group__0__Impl
	rule__Image__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImageAccess().getImageKeyword_0()); }
	'image'
	{ after(grammarAccess.getImageAccess().getImageKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Image__Group__1__Impl
	rule__Image__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImageAccess().getValueAssignment_1()); }
	(rule__Image__ValueAssignment_1)
	{ after(grammarAccess.getImageAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Image__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImageAccess().getClassAssignment_2()); }
	(rule__Image__ClassAssignment_2)
	{ after(grammarAccess.getImageAccess().getClassAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Go__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Go__Group__0__Impl
	rule__Go__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Go__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGoAccess().getValAssignment_0()); }
	(rule__Go__ValAssignment_0)
	{ after(grammarAccess.getGoAccess().getValAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Go__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Go__Group__1__Impl
	rule__Go__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Go__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGoAccess().getGetKeyword_1()); }
	'.get('
	{ after(grammarAccess.getGoAccess().getGetKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Go__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Go__Group__2__Impl
	rule__Go__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Go__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGoAccess().getUrlAssignment_2()); }
	(rule__Go__UrlAssignment_2)
	{ after(grammarAccess.getGoAccess().getUrlAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Go__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Go__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Go__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGoAccess().getRightParenthesisSemicolonKeyword_3()); }
	');'
	{ after(grammarAccess.getGoAccess().getRightParenthesisSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Contains__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contains__Group__0__Impl
	rule__Contains__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainsAccess().getValAssignment_0()); }
	(rule__Contains__ValAssignment_0)
	{ after(grammarAccess.getContainsAccess().getValAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contains__Group__1__Impl
	rule__Contains__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainsAccess().getContainsKeyword_1()); }
	'.contains('
	{ after(grammarAccess.getContainsAccess().getContainsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contains__Group__2__Impl
	rule__Contains__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainsAccess().getParamAssignment_2()); }
	(rule__Contains__ParamAssignment_2)
	{ after(grammarAccess.getContainsAccess().getParamAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contains__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainsAccess().getRightParenthesisSemicolonKeyword_3()); }
	');'
	{ after(grammarAccess.getContainsAccess().getRightParenthesisSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Click__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Click__Group__0__Impl
	rule__Click__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Click__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClickAccess().getValAssignment_0()); }
	(rule__Click__ValAssignment_0)
	{ after(grammarAccess.getClickAccess().getValAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Click__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Click__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Click__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClickAccess().getClickKeyword_1()); }
	'.click();'
	{ after(grammarAccess.getClickAccess().getClickKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReadElement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReadElement__Group__0__Impl
	rule__ReadElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadElement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReadElementAccess().getRefAssignment_0()); }
	(rule__ReadElement__RefAssignment_0)
	{ after(grammarAccess.getReadElementAccess().getRefAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadElement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReadElement__Group__1__Impl
	rule__ReadElement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadElement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReadElementAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getReadElementAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadElement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReadElement__Group__2__Impl
	rule__ReadElement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadElement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReadElementAccess().getValAssignment_2()); }
	(rule__ReadElement__ValAssignment_2)
	{ after(grammarAccess.getReadElementAccess().getValAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadElement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReadElement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadElement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReadElementAccess().getReadElementKeyword_3()); }
	'.readElement();'
	{ after(grammarAccess.getReadElementAccess().getReadElementKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CheckContainsLink__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CheckContainsLink__Group__0__Impl
	rule__CheckContainsLink__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckContainsLink__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckContainsLinkAccess().getValAssignment_0()); }
	(rule__CheckContainsLink__ValAssignment_0)
	{ after(grammarAccess.getCheckContainsLinkAccess().getValAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckContainsLink__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CheckContainsLink__Group__1__Impl
	rule__CheckContainsLink__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckContainsLink__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckContainsLinkAccess().getCheckContainsLinkByKeyword_1()); }
	'.checkContainsLink(By.'
	{ after(grammarAccess.getCheckContainsLinkAccess().getCheckContainsLinkByKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckContainsLink__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CheckContainsLink__Group__2__Impl
	rule__CheckContainsLink__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckContainsLink__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckContainsLinkAccess().getNameAssignment_2()); }
	(rule__CheckContainsLink__NameAssignment_2)
	{ after(grammarAccess.getCheckContainsLinkAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckContainsLink__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CheckContainsLink__Group__3__Impl
	rule__CheckContainsLink__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckContainsLink__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckContainsLinkAccess().getLeftParenthesisKeyword_3()); }
	'('
	{ after(grammarAccess.getCheckContainsLinkAccess().getLeftParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckContainsLink__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CheckContainsLink__Group__4__Impl
	rule__CheckContainsLink__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckContainsLink__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckContainsLinkAccess().getParamAssignment_4()); }
	(rule__CheckContainsLink__ParamAssignment_4)
	{ after(grammarAccess.getCheckContainsLinkAccess().getParamAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckContainsLink__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CheckContainsLink__Group__5__Impl
	rule__CheckContainsLink__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckContainsLink__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckContainsLinkAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getCheckContainsLinkAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckContainsLink__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CheckContainsLink__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckContainsLink__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckContainsLinkAccess().getRightParenthesisSemicolonKeyword_6()); }
	');'
	{ after(grammarAccess.getCheckContainsLinkAccess().getRightParenthesisSemicolonKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CheckContainsText__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CheckContainsText__Group__0__Impl
	rule__CheckContainsText__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckContainsText__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckContainsTextAccess().getValAssignment_0()); }
	(rule__CheckContainsText__ValAssignment_0)
	{ after(grammarAccess.getCheckContainsTextAccess().getValAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckContainsText__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CheckContainsText__Group__1__Impl
	rule__CheckContainsText__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckContainsText__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckContainsTextAccess().getCheckContainsTextByKeyword_1()); }
	'.checkContainsText(By.'
	{ after(grammarAccess.getCheckContainsTextAccess().getCheckContainsTextByKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckContainsText__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CheckContainsText__Group__2__Impl
	rule__CheckContainsText__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckContainsText__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckContainsTextAccess().getNameAssignment_2()); }
	(rule__CheckContainsText__NameAssignment_2)
	{ after(grammarAccess.getCheckContainsTextAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckContainsText__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CheckContainsText__Group__3__Impl
	rule__CheckContainsText__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckContainsText__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckContainsTextAccess().getLeftParenthesisKeyword_3()); }
	'('
	{ after(grammarAccess.getCheckContainsTextAccess().getLeftParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckContainsText__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CheckContainsText__Group__4__Impl
	rule__CheckContainsText__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckContainsText__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckContainsTextAccess().getParamAssignment_4()); }
	(rule__CheckContainsText__ParamAssignment_4)
	{ after(grammarAccess.getCheckContainsTextAccess().getParamAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckContainsText__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CheckContainsText__Group__5__Impl
	rule__CheckContainsText__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckContainsText__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckContainsTextAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getCheckContainsTextAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckContainsText__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CheckContainsText__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckContainsText__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckContainsTextAccess().getRightParenthesisSemicolonKeyword_6()); }
	');'
	{ after(grammarAccess.getCheckContainsTextAccess().getRightParenthesisSemicolonKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FindProperty__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindProperty__Group__0__Impl
	rule__FindProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FindProperty__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindPropertyAccess().getRefAssignment_0()); }
	(rule__FindProperty__RefAssignment_0)
	{ after(grammarAccess.getFindPropertyAccess().getRefAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindProperty__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindProperty__Group__1__Impl
	rule__FindProperty__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FindProperty__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindPropertyAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getFindPropertyAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindProperty__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindProperty__Group__2__Impl
	rule__FindProperty__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FindProperty__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindPropertyAccess().getValAssignment_2()); }
	(rule__FindProperty__ValAssignment_2)
	{ after(grammarAccess.getFindPropertyAccess().getValAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindProperty__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindProperty__Group__3__Impl
	rule__FindProperty__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FindProperty__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindPropertyAccess().getFindElementByKeyword_3()); }
	'.findElement(By.'
	{ after(grammarAccess.getFindPropertyAccess().getFindElementByKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindProperty__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindProperty__Group__4__Impl
	rule__FindProperty__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FindProperty__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindPropertyAccess().getNameAssignment_4()); }
	(rule__FindProperty__NameAssignment_4)
	{ after(grammarAccess.getFindPropertyAccess().getNameAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindProperty__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindProperty__Group__5__Impl
	rule__FindProperty__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FindProperty__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindPropertyAccess().getLeftParenthesisKeyword_5()); }
	'('
	{ after(grammarAccess.getFindPropertyAccess().getLeftParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindProperty__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindProperty__Group__6__Impl
	rule__FindProperty__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__FindProperty__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindPropertyAccess().getParamAssignment_6()); }
	(rule__FindProperty__ParamAssignment_6)
	{ after(grammarAccess.getFindPropertyAccess().getParamAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindProperty__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindProperty__Group__7__Impl
	rule__FindProperty__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__FindProperty__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindPropertyAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getFindPropertyAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindProperty__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindProperty__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FindProperty__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindPropertyAccess().getRightParenthesisSemicolonKeyword_8()); }
	');'
	{ after(grammarAccess.getFindPropertyAccess().getRightParenthesisSemicolonKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FindFirstProperty__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindFirstProperty__Group__0__Impl
	rule__FindFirstProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FindFirstProperty__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindFirstPropertyAccess().getRefAssignment_0()); }
	(rule__FindFirstProperty__RefAssignment_0)
	{ after(grammarAccess.getFindFirstPropertyAccess().getRefAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindFirstProperty__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindFirstProperty__Group__1__Impl
	rule__FindFirstProperty__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FindFirstProperty__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindFirstPropertyAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getFindFirstPropertyAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindFirstProperty__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindFirstProperty__Group__2__Impl
	rule__FindFirstProperty__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FindFirstProperty__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindFirstPropertyAccess().getValAssignment_2()); }
	(rule__FindFirstProperty__ValAssignment_2)
	{ after(grammarAccess.getFindFirstPropertyAccess().getValAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindFirstProperty__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindFirstProperty__Group__3__Impl
	rule__FindFirstProperty__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FindFirstProperty__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindFirstPropertyAccess().getFindFirstElementByKeyword_3()); }
	'.findFirstElement(By.'
	{ after(grammarAccess.getFindFirstPropertyAccess().getFindFirstElementByKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindFirstProperty__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindFirstProperty__Group__4__Impl
	rule__FindFirstProperty__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FindFirstProperty__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindFirstPropertyAccess().getNameAssignment_4()); }
	(rule__FindFirstProperty__NameAssignment_4)
	{ after(grammarAccess.getFindFirstPropertyAccess().getNameAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindFirstProperty__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindFirstProperty__Group__5__Impl
	rule__FindFirstProperty__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FindFirstProperty__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindFirstPropertyAccess().getLeftParenthesisKeyword_5()); }
	'('
	{ after(grammarAccess.getFindFirstPropertyAccess().getLeftParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindFirstProperty__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindFirstProperty__Group__6__Impl
	rule__FindFirstProperty__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__FindFirstProperty__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindFirstPropertyAccess().getParamAssignment_6()); }
	(rule__FindFirstProperty__ParamAssignment_6)
	{ after(grammarAccess.getFindFirstPropertyAccess().getParamAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindFirstProperty__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindFirstProperty__Group__7__Impl
	rule__FindFirstProperty__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__FindFirstProperty__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindFirstPropertyAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getFindFirstPropertyAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindFirstProperty__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindFirstProperty__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FindFirstProperty__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindFirstPropertyAccess().getRightParenthesisSemicolonKeyword_8()); }
	');'
	{ after(grammarAccess.getFindFirstPropertyAccess().getRightParenthesisSemicolonKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FindSecondProperty__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindSecondProperty__Group__0__Impl
	rule__FindSecondProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FindSecondProperty__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindSecondPropertyAccess().getRefAssignment_0()); }
	(rule__FindSecondProperty__RefAssignment_0)
	{ after(grammarAccess.getFindSecondPropertyAccess().getRefAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindSecondProperty__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindSecondProperty__Group__1__Impl
	rule__FindSecondProperty__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FindSecondProperty__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindSecondPropertyAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getFindSecondPropertyAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindSecondProperty__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindSecondProperty__Group__2__Impl
	rule__FindSecondProperty__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FindSecondProperty__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindSecondPropertyAccess().getValAssignment_2()); }
	(rule__FindSecondProperty__ValAssignment_2)
	{ after(grammarAccess.getFindSecondPropertyAccess().getValAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindSecondProperty__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindSecondProperty__Group__3__Impl
	rule__FindSecondProperty__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FindSecondProperty__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindSecondPropertyAccess().getFindSecondElementByKeyword_3()); }
	'.findSecondElement(By.'
	{ after(grammarAccess.getFindSecondPropertyAccess().getFindSecondElementByKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindSecondProperty__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindSecondProperty__Group__4__Impl
	rule__FindSecondProperty__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FindSecondProperty__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindSecondPropertyAccess().getNameAssignment_4()); }
	(rule__FindSecondProperty__NameAssignment_4)
	{ after(grammarAccess.getFindSecondPropertyAccess().getNameAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindSecondProperty__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindSecondProperty__Group__5__Impl
	rule__FindSecondProperty__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FindSecondProperty__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindSecondPropertyAccess().getLeftParenthesisKeyword_5()); }
	'('
	{ after(grammarAccess.getFindSecondPropertyAccess().getLeftParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindSecondProperty__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindSecondProperty__Group__6__Impl
	rule__FindSecondProperty__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__FindSecondProperty__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindSecondPropertyAccess().getParamAssignment_6()); }
	(rule__FindSecondProperty__ParamAssignment_6)
	{ after(grammarAccess.getFindSecondPropertyAccess().getParamAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindSecondProperty__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindSecondProperty__Group__7__Impl
	rule__FindSecondProperty__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__FindSecondProperty__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindSecondPropertyAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getFindSecondPropertyAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindSecondProperty__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindSecondProperty__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FindSecondProperty__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindSecondPropertyAccess().getRightParenthesisSemicolonKeyword_8()); }
	');'
	{ after(grammarAccess.getFindSecondPropertyAccess().getRightParenthesisSemicolonKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GetTitle__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GetTitle__Group__0__Impl
	rule__GetTitle__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GetTitle__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGetTitleAccess().getValAssignment_0()); }
	(rule__GetTitle__ValAssignment_0)
	{ after(grammarAccess.getGetTitleAccess().getValAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GetTitle__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GetTitle__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GetTitle__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGetTitleAccess().getGetTitleKeyword_1()); }
	'.getTitle()'
	{ after(grammarAccess.getGetTitleAccess().getGetTitleKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Insert__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insert__Group_0__0__Impl
	rule__Insert__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertAccess().getValAssignment_0_0()); }
	(rule__Insert__ValAssignment_0_0)
	{ after(grammarAccess.getInsertAccess().getValAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insert__Group_0__1__Impl
	rule__Insert__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertAccess().getInsertKeyword_0_1()); }
	'.insert('
	{ after(grammarAccess.getInsertAccess().getInsertKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insert__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertAccess().getParamAssignment_0_2()); }
	(rule__Insert__ParamAssignment_0_2)?
	{ after(grammarAccess.getInsertAccess().getParamAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Insert__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insert__Group_1__0__Impl
	rule__Insert__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertAccess().getRefAssignment_1_0()); }
	(rule__Insert__RefAssignment_1_0)?
	{ after(grammarAccess.getInsertAccess().getRefAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insert__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertAccess().getRightParenthesisSemicolonKeyword_1_1()); }
	');'
	{ after(grammarAccess.getInsertAccess().getRightParenthesisSemicolonKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CheckCheckbox__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CheckCheckbox__Group__0__Impl
	rule__CheckCheckbox__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckCheckbox__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckCheckboxAccess().getValAssignment_0()); }
	(rule__CheckCheckbox__ValAssignment_0)
	{ after(grammarAccess.getCheckCheckboxAccess().getValAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckCheckbox__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CheckCheckbox__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckCheckbox__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckCheckboxAccess().getCheckKeyword_1()); }
	'.check();'
	{ after(grammarAccess.getCheckCheckboxAccess().getCheckKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClearCheckbox__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClearCheckbox__Group__0__Impl
	rule__ClearCheckbox__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClearCheckbox__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClearCheckboxAccess().getValAssignment_0()); }
	(rule__ClearCheckbox__ValAssignment_0)
	{ after(grammarAccess.getClearCheckboxAccess().getValAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClearCheckbox__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClearCheckbox__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClearCheckbox__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClearCheckboxAccess().getClearCheckBoxKeyword_1()); }
	'.clearCheckBox();'
	{ after(grammarAccess.getClearCheckboxAccess().getClearCheckBoxKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectCombobox__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectCombobox__Group__0__Impl
	rule__SelectCombobox__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCombobox__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectComboboxAccess().getValAssignment_0()); }
	(rule__SelectCombobox__ValAssignment_0)
	{ after(grammarAccess.getSelectComboboxAccess().getValAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCombobox__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectCombobox__Group__1__Impl
	rule__SelectCombobox__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCombobox__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectComboboxAccess().getSelectKeyword_1()); }
	'.select('
	{ after(grammarAccess.getSelectComboboxAccess().getSelectKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCombobox__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectCombobox__Group__2__Impl
	rule__SelectCombobox__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCombobox__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectComboboxAccess().getParamAssignment_2()); }
	(rule__SelectCombobox__ParamAssignment_2)
	{ after(grammarAccess.getSelectComboboxAccess().getParamAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCombobox__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectCombobox__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCombobox__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectComboboxAccess().getRightParenthesisSemicolonKeyword_3()); }
	');'
	{ after(grammarAccess.getSelectComboboxAccess().getRightParenthesisSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Program__LinesAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getLinesLinesParserRuleCall_0()); }
		ruleLines
		{ after(grammarAccess.getProgramAccess().getLinesLinesParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationAccess().getTypeTypeParserRuleCall_0_0()); }
		ruleType
		{ after(grammarAccess.getDeclarationAccess().getTypeTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__VarAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationAccess().getVarVariableParserRuleCall_1_0()); }
		ruleVariable
		{ after(grammarAccess.getDeclarationAccess().getVarVariableParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__TypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getTypeAlternatives_0()); }
		(rule__Type__TypeAlternatives_0)
		{ after(grammarAccess.getTypeAccess().getTypeAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__RefAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAffectationAccess().getRefVarReferenceParserRuleCall_0_0()); }
		ruleVarReference
		{ after(grammarAccess.getAffectationAccess().getRefVarReferenceParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__ExprAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAffectationAccess().getExprExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getAffectationAccess().getExprExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarReference__ValAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarReferenceAccess().getValVariableCrossReference_0()); }
		(
			{ before(grammarAccess.getVarReferenceAccess().getValVariableIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getVarReferenceAccess().getValVariableIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getVarReferenceAccess().getValVariableCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getLinkAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__UrlAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkAccess().getUrlSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getLinkAccess().getUrlSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__ClassAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkAccess().getClassSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getLinkAccess().getClassSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getInputAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputAccess().getValueSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getInputAccess().getValueSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__TypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputAccess().getTypeSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getInputAccess().getTypeSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__ClassAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputAccess().getClassSTRINGTerminalRuleCall_4_0()); }
		RULE_STRING
		{ after(grammarAccess.getInputAccess().getClassSTRINGTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getButtonAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getButtonAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getButtonAccess().getValueWebElementVarReferenceParserRuleCall_2_0()); }
		ruleWebElementVarReference
		{ after(grammarAccess.getButtonAccess().getValueWebElementVarReferenceParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__ClassAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getButtonAccess().getClassSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getButtonAccess().getClassSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getTextAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextAccess().getValueWebElementVarReferenceParserRuleCall_2_0()); }
		ruleWebElementVarReference
		{ after(grammarAccess.getTextAccess().getValueWebElementVarReferenceParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__ClassAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextAccess().getClassSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getTextAccess().getClassSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Checkbox__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCheckboxAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getCheckboxAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Checkbox__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCheckboxAccess().getValueListValueParserRuleCall_2_0()); }
		ruleListValue
		{ after(grammarAccess.getCheckboxAccess().getValueListValueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Checkbox__ClassAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCheckboxAccess().getClassSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getCheckboxAccess().getClassSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Combobox__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComboboxAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getComboboxAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Combobox__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComboboxAccess().getValueListValueParserRuleCall_2_0()); }
		ruleListValue
		{ after(grammarAccess.getComboboxAccess().getValueListValueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Combobox__ClassAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComboboxAccess().getClassSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getComboboxAccess().getClassSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImageAccess().getValueWebElementVarReferenceParserRuleCall_1_0()); }
		ruleWebElementVarReference
		{ after(grammarAccess.getImageAccess().getValueWebElementVarReferenceParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__ClassAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImageAccess().getClassSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getImageAccess().getClassSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Go__ValAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGoAccess().getValWebDriverVarReferenceParserRuleCall_0_0()); }
		ruleWebDriverVarReference
		{ after(grammarAccess.getGoAccess().getValWebDriverVarReferenceParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Go__UrlAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGoAccess().getUrlSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getGoAccess().getUrlSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__ValAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContainsAccess().getValWebElementVarReferenceParserRuleCall_0_0()); }
		ruleWebElementVarReference
		{ after(grammarAccess.getContainsAccess().getValWebElementVarReferenceParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__ParamAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContainsAccess().getParamSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getContainsAccess().getParamSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Click__ValAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClickAccess().getValWebElementVarReferenceParserRuleCall_0_0()); }
		ruleWebElementVarReference
		{ after(grammarAccess.getClickAccess().getValWebElementVarReferenceParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadElement__RefAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReadElementAccess().getRefVarReferenceParserRuleCall_0_0()); }
		ruleVarReference
		{ after(grammarAccess.getReadElementAccess().getRefVarReferenceParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadElement__ValAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReadElementAccess().getValWebElementVarReferenceParserRuleCall_2_0()); }
		ruleWebElementVarReference
		{ after(grammarAccess.getReadElementAccess().getValWebElementVarReferenceParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckContainsLink__ValAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCheckContainsLinkAccess().getValWebDriverVarReferenceParserRuleCall_0_0()); }
		ruleWebDriverVarReference
		{ after(grammarAccess.getCheckContainsLinkAccess().getValWebDriverVarReferenceParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckContainsLink__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCheckContainsLinkAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getCheckContainsLinkAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckContainsLink__ParamAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCheckContainsLinkAccess().getParamSTRINGTerminalRuleCall_4_0()); }
		RULE_STRING
		{ after(grammarAccess.getCheckContainsLinkAccess().getParamSTRINGTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckContainsText__ValAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCheckContainsTextAccess().getValWebDriverVarReferenceParserRuleCall_0_0()); }
		ruleWebDriverVarReference
		{ after(grammarAccess.getCheckContainsTextAccess().getValWebDriverVarReferenceParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckContainsText__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCheckContainsTextAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getCheckContainsTextAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckContainsText__ParamAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCheckContainsTextAccess().getParamSTRINGTerminalRuleCall_4_0()); }
		RULE_STRING
		{ after(grammarAccess.getCheckContainsTextAccess().getParamSTRINGTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindProperty__RefAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFindPropertyAccess().getRefVarReferenceParserRuleCall_0_0()); }
		ruleVarReference
		{ after(grammarAccess.getFindPropertyAccess().getRefVarReferenceParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindProperty__ValAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFindPropertyAccess().getValWebDriverVarReferenceParserRuleCall_2_0()); }
		ruleWebDriverVarReference
		{ after(grammarAccess.getFindPropertyAccess().getValWebDriverVarReferenceParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindProperty__NameAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFindPropertyAccess().getNameIDTerminalRuleCall_4_0()); }
		RULE_ID
		{ after(grammarAccess.getFindPropertyAccess().getNameIDTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindProperty__ParamAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFindPropertyAccess().getParamSTRINGTerminalRuleCall_6_0()); }
		RULE_STRING
		{ after(grammarAccess.getFindPropertyAccess().getParamSTRINGTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindFirstProperty__RefAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFindFirstPropertyAccess().getRefVarReferenceParserRuleCall_0_0()); }
		ruleVarReference
		{ after(grammarAccess.getFindFirstPropertyAccess().getRefVarReferenceParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindFirstProperty__ValAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFindFirstPropertyAccess().getValWebDriverVarReferenceParserRuleCall_2_0()); }
		ruleWebDriverVarReference
		{ after(grammarAccess.getFindFirstPropertyAccess().getValWebDriverVarReferenceParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindFirstProperty__NameAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFindFirstPropertyAccess().getNameIDTerminalRuleCall_4_0()); }
		RULE_ID
		{ after(grammarAccess.getFindFirstPropertyAccess().getNameIDTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindFirstProperty__ParamAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFindFirstPropertyAccess().getParamSTRINGTerminalRuleCall_6_0()); }
		RULE_STRING
		{ after(grammarAccess.getFindFirstPropertyAccess().getParamSTRINGTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindSecondProperty__RefAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFindSecondPropertyAccess().getRefVarReferenceParserRuleCall_0_0()); }
		ruleVarReference
		{ after(grammarAccess.getFindSecondPropertyAccess().getRefVarReferenceParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindSecondProperty__ValAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFindSecondPropertyAccess().getValWebDriverVarReferenceParserRuleCall_2_0()); }
		ruleWebDriverVarReference
		{ after(grammarAccess.getFindSecondPropertyAccess().getValWebDriverVarReferenceParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindSecondProperty__NameAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFindSecondPropertyAccess().getNameIDTerminalRuleCall_4_0()); }
		RULE_ID
		{ after(grammarAccess.getFindSecondPropertyAccess().getNameIDTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindSecondProperty__ParamAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFindSecondPropertyAccess().getParamSTRINGTerminalRuleCall_6_0()); }
		RULE_STRING
		{ after(grammarAccess.getFindSecondPropertyAccess().getParamSTRINGTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GetTitle__ValAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGetTitleAccess().getValWebElementVarReferenceParserRuleCall_0_0()); }
		ruleWebElementVarReference
		{ after(grammarAccess.getGetTitleAccess().getValWebElementVarReferenceParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__ValAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInsertAccess().getValWebElementVarReferenceParserRuleCall_0_0_0()); }
		ruleWebElementVarReference
		{ after(grammarAccess.getInsertAccess().getValWebElementVarReferenceParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__ParamAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInsertAccess().getParamSTRINGTerminalRuleCall_0_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getInsertAccess().getParamSTRINGTerminalRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__RefAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInsertAccess().getRefVarReferenceParserRuleCall_1_0_0()); }
		ruleVarReference
		{ after(grammarAccess.getInsertAccess().getRefVarReferenceParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckCheckbox__ValAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCheckCheckboxAccess().getValWebElementVarReferenceParserRuleCall_0_0()); }
		ruleWebElementVarReference
		{ after(grammarAccess.getCheckCheckboxAccess().getValWebElementVarReferenceParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClearCheckbox__ValAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClearCheckboxAccess().getValWebDriverVarReferenceParserRuleCall_0_0()); }
		ruleWebDriverVarReference
		{ after(grammarAccess.getClearCheckboxAccess().getValWebDriverVarReferenceParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCombobox__ValAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectComboboxAccess().getValWebElementVarReferenceParserRuleCall_0_0()); }
		ruleWebElementVarReference
		{ after(grammarAccess.getSelectComboboxAccess().getValWebElementVarReferenceParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCombobox__ParamAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectComboboxAccess().getParamSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getSelectComboboxAccess().getParamSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

fragment RULE_PROTOCOL : ('http'|'https') '://';

fragment RULE_EXTENTION : ('fr'|'com');

fragment RULE_DOMAIN : RULE_STRING ('.' RULE_STRING)* '.' RULE_EXTENTION;

fragment RULE_PATH : ('/'|('/' RULE_STRING)*);

RULE_URL : RULE_PROTOCOL RULE_DOMAIN RULE_PATH;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
