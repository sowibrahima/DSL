/*
 * generated by Xtext 2.19.0
 */
grammar InternalBrowser;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.BrowserGrammarAccess;

}

@parser::members {

 	private BrowserGrammarAccess grammarAccess;

    public InternalBrowserParser(TokenStream input, BrowserGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Program";
   	}

   	@Override
   	protected BrowserGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleProgram
entryRuleProgram returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProgramRule()); }
	iv_ruleProgram=ruleProgram
	{ $current=$iv_ruleProgram.current; }
	EOF;

// Rule Program
ruleProgram returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getProgramAccess().getLinesLinesParserRuleCall_0());
			}
			lv_lines_0_0=ruleLines
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getProgramRule());
				}
				add(
					$current,
					"lines",
					lv_lines_0_0,
					"org.xtext.example.mydsl.Browser.Lines");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleLines
entryRuleLines returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLinesRule()); }
	iv_ruleLines=ruleLines
	{ $current=$iv_ruleLines.current; }
	EOF;

// Rule Lines
ruleLines returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLinesAccess().getDeclarationParserRuleCall_0());
		}
		this_Declaration_0=ruleDeclaration
		{
			$current = $this_Declaration_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLinesAccess().getAffectationParserRuleCall_1());
		}
		this_Affectation_1=ruleAffectation
		{
			$current = $this_Affectation_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLinesAccess().getFunctionCallParserRuleCall_2());
		}
		this_FunctionCall_2=ruleFunctionCall
		{
			$current = $this_FunctionCall_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLinesAccess().getFindPropertyParserRuleCall_3());
		}
		this_FindProperty_3=ruleFindProperty
		{
			$current = $this_FindProperty_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLinesAccess().getFindFirstPropertyParserRuleCall_4());
		}
		this_FindFirstProperty_4=ruleFindFirstProperty
		{
			$current = $this_FindFirstProperty_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLinesAccess().getFindSecondPropertyParserRuleCall_5());
		}
		this_FindSecondProperty_5=ruleFindSecondProperty
		{
			$current = $this_FindSecondProperty_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLinesAccess().getGetTitleParserRuleCall_6());
		}
		this_GetTitle_6=ruleGetTitle
		{
			$current = $this_GetTitle_6.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleFunctionCall
entryRuleFunctionCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionCallRule()); }
	iv_ruleFunctionCall=ruleFunctionCall
	{ $current=$iv_ruleFunctionCall.current; }
	EOF;

// Rule FunctionCall
ruleFunctionCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFunctionCallAccess().getGoParserRuleCall_0());
		}
		this_Go_0=ruleGo
		{
			$current = $this_Go_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFunctionCallAccess().getContainsParserRuleCall_1());
		}
		this_Contains_1=ruleContains
		{
			$current = $this_Contains_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFunctionCallAccess().getInterractionsParserRuleCall_2());
		}
		this_Interractions_2=ruleInterractions
		{
			$current = $this_Interractions_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDeclaration
entryRuleDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclarationRule()); }
	iv_ruleDeclaration=ruleDeclaration
	{ $current=$iv_ruleDeclaration.current; }
	EOF;

// Rule Declaration
ruleDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclarationAccess().getTypeTypeParserRuleCall_0_0());
				}
				lv_type_0_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclarationRule());
					}
					set(
						$current,
						"type",
						lv_type_0_0,
						"org.xtext.example.mydsl.Browser.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclarationAccess().getVarVariableParserRuleCall_1_0());
				}
				lv_var_1_0=ruleVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclarationRule());
					}
					set(
						$current,
						"var",
						lv_var_1_0,
						"org.xtext.example.mydsl.Browser.Variable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getDeclarationAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleType
entryRuleType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	iv_ruleType=ruleType
	{ $current=$iv_ruleType.current; }
	EOF;

// Rule Type
ruleType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_type_0_1='WebDriver'
				{
					newLeafNode(lv_type_0_1, grammarAccess.getTypeAccess().getTypeWebDriverKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_1, null);
				}
				    |
				lv_type_0_2='WebElement'
				{
					newLeafNode(lv_type_0_2, grammarAccess.getTypeAccess().getTypeWebElementKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_2, null);
				}
				    |
				lv_type_0_3='String'
				{
					newLeafNode(lv_type_0_3, grammarAccess.getTypeAccess().getTypeStringKeyword_0_2());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_3, null);
				}
			)
		)
	)
;

// Entry rule entryRuleAffectation
entryRuleAffectation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAffectationRule()); }
	iv_ruleAffectation=ruleAffectation
	{ $current=$iv_ruleAffectation.current; }
	EOF;

// Rule Affectation
ruleAffectation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAffectationAccess().getRefVarReferenceParserRuleCall_0_0());
				}
				lv_ref_0_0=ruleVarReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAffectationRule());
					}
					set(
						$current,
						"ref",
						lv_ref_0_0,
						"org.xtext.example.mydsl.Browser.VarReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getAffectationAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAffectationAccess().getExprExpressionParserRuleCall_2_0());
				}
				lv_expr_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAffectationRule());
					}
					set(
						$current,
						"expr",
						lv_expr_2_0,
						"org.xtext.example.mydsl.Browser.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getAffectationAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getWebDriverTypeParserRuleCall_0());
		}
		ruleWebDriverType
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getWebElementTypeParserRuleCall_1());
		}
		this_WebElementType_1=ruleWebElementType
		{
			$current = $this_WebElementType_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		this_STRING_2=RULE_STRING
		{
			newLeafNode(this_STRING_2, grammarAccess.getExpressionAccess().getSTRINGTerminalRuleCall_2());
		}
		    |
		this_URL_3=RULE_URL
		{
			newLeafNode(this_URL_3, grammarAccess.getExpressionAccess().getURLTerminalRuleCall_3());
		}
	)
;

// Entry rule entryRuleWebDriverType
entryRuleWebDriverType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getWebDriverTypeRule()); }
	iv_ruleWebDriverType=ruleWebDriverType
	{ $current=$iv_ruleWebDriverType.current.getText(); }
	EOF;

// Rule WebDriverType
ruleWebDriverType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='FirefoxDriver'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getWebDriverTypeAccess().getFirefoxDriverKeyword_0());
		}
		    |
		kw='ChromeDriver'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getWebDriverTypeAccess().getChromeDriverKeyword_1());
		}
		    |
		kw='InternetExplorerDriver'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getWebDriverTypeAccess().getInternetExplorerDriverKeyword_2());
		}
	)
;

// Entry rule entryRuleVarReference
entryRuleVarReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVarReferenceRule()); }
	iv_ruleVarReference=ruleVarReference
	{ $current=$iv_ruleVarReference.current; }
	EOF;

// Rule VarReference
ruleVarReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getVarReferenceRule());
				}
			}
			otherlv_0=RULE_ID
			{
				newLeafNode(otherlv_0, grammarAccess.getVarReferenceAccess().getValVariableCrossReference_0());
			}
		)
	)
;

// Entry rule entryRuleWebElementVarReference
entryRuleWebElementVarReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWebElementVarReferenceRule()); }
	iv_ruleWebElementVarReference=ruleWebElementVarReference
	{ $current=$iv_ruleWebElementVarReference.current; }
	EOF;

// Rule WebElementVarReference
ruleWebElementVarReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getWebElementVarReferenceAccess().getVarReferenceParserRuleCall());
	}
	this_VarReference_0=ruleVarReference
	{
		$current = $this_VarReference_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleWebDriverVarReference
entryRuleWebDriverVarReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWebDriverVarReferenceRule()); }
	iv_ruleWebDriverVarReference=ruleWebDriverVarReference
	{ $current=$iv_ruleWebDriverVarReference.current; }
	EOF;

// Rule WebDriverVarReference
ruleWebDriverVarReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getWebDriverVarReferenceAccess().getVarReferenceParserRuleCall());
	}
	this_VarReference_0=ruleVarReference
	{
		$current = $this_VarReference_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleVariable
entryRuleVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableRule()); }
	iv_ruleVariable=ruleVariable
	{ $current=$iv_ruleVariable.current; }
	EOF;

// Rule Variable
ruleVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVariableRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		    |
		this_URL_1=RULE_URL
		{
			newLeafNode(this_URL_1, grammarAccess.getVariableAccess().getURLTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleWebElementType
entryRuleWebElementType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWebElementTypeRule()); }
	iv_ruleWebElementType=ruleWebElementType
	{ $current=$iv_ruleWebElementType.current; }
	EOF;

// Rule WebElementType
ruleWebElementType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getWebElementTypeAccess().getLinkParserRuleCall_0());
		}
		this_Link_0=ruleLink
		{
			$current = $this_Link_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getWebElementTypeAccess().getInputParserRuleCall_1());
		}
		this_Input_1=ruleInput
		{
			$current = $this_Input_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getWebElementTypeAccess().getButtonParserRuleCall_2());
		}
		this_Button_2=ruleButton
		{
			$current = $this_Button_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getWebElementTypeAccess().getTextParserRuleCall_3());
		}
		this_Text_3=ruleText
		{
			$current = $this_Text_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getWebElementTypeAccess().getCheckboxParserRuleCall_4());
		}
		this_Checkbox_4=ruleCheckbox
		{
			$current = $this_Checkbox_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getWebElementTypeAccess().getComboboxParserRuleCall_5());
		}
		this_Combobox_5=ruleCombobox
		{
			$current = $this_Combobox_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getWebElementTypeAccess().getImageParserRuleCall_6());
		}
		this_Image_6=ruleImage
		{
			$current = $this_Image_6.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLink
entryRuleLink returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLinkRule()); }
	iv_ruleLink=ruleLink
	{ $current=$iv_ruleLink.current; }
	EOF;

// Rule Link
ruleLink returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='link'
		{
			newLeafNode(otherlv_0, grammarAccess.getLinkAccess().getLinkKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getLinkAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLinkRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				lv_url_2_0=RULE_STRING
				{
					newLeafNode(lv_url_2_0, grammarAccess.getLinkAccess().getUrlSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLinkRule());
					}
					setWithLastConsumed(
						$current,
						"url",
						lv_url_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				lv_class_3_0=RULE_STRING
				{
					newLeafNode(lv_class_3_0, grammarAccess.getLinkAccess().getClassSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLinkRule());
					}
					setWithLastConsumed(
						$current,
						"class",
						lv_class_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleInput
entryRuleInput returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInputRule()); }
	iv_ruleInput=ruleInput
	{ $current=$iv_ruleInput.current; }
	EOF;

// Rule Input
ruleInput returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='input'
		{
			newLeafNode(otherlv_0, grammarAccess.getInputAccess().getInputKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getInputAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInputRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				lv_value_2_0=RULE_STRING
				{
					newLeafNode(lv_value_2_0, grammarAccess.getInputAccess().getValueSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInputRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				lv_type_3_0=RULE_STRING
				{
					newLeafNode(lv_type_3_0, grammarAccess.getInputAccess().getTypeSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInputRule());
					}
					setWithLastConsumed(
						$current,
						"type",
						lv_type_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				lv_class_4_0=RULE_STRING
				{
					newLeafNode(lv_class_4_0, grammarAccess.getInputAccess().getClassSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInputRule());
					}
					setWithLastConsumed(
						$current,
						"class",
						lv_class_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleButton
entryRuleButton returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getButtonRule()); }
	iv_ruleButton=ruleButton
	{ $current=$iv_ruleButton.current; }
	EOF;

// Rule Button
ruleButton returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='button'
		{
			newLeafNode(otherlv_0, grammarAccess.getButtonAccess().getButtonKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getButtonAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getButtonRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getButtonAccess().getValueWebElementVarReferenceParserRuleCall_2_0());
				}
				lv_value_2_0=ruleWebElementVarReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getButtonRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"org.xtext.example.mydsl.Browser.WebElementVarReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_class_3_0=RULE_STRING
				{
					newLeafNode(lv_class_3_0, grammarAccess.getButtonAccess().getClassSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getButtonRule());
					}
					setWithLastConsumed(
						$current,
						"class",
						lv_class_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleText
entryRuleText returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTextRule()); }
	iv_ruleText=ruleText
	{ $current=$iv_ruleText.current; }
	EOF;

// Rule Text
ruleText returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='text'
		{
			newLeafNode(otherlv_0, grammarAccess.getTextAccess().getTextKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getTextAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTextRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTextAccess().getValueWebElementVarReferenceParserRuleCall_2_0());
				}
				lv_value_2_0=ruleWebElementVarReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTextRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"org.xtext.example.mydsl.Browser.WebElementVarReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_class_3_0=RULE_STRING
				{
					newLeafNode(lv_class_3_0, grammarAccess.getTextAccess().getClassSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTextRule());
					}
					setWithLastConsumed(
						$current,
						"class",
						lv_class_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleCheckbox
entryRuleCheckbox returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCheckboxRule()); }
	iv_ruleCheckbox=ruleCheckbox
	{ $current=$iv_ruleCheckbox.current; }
	EOF;

// Rule Checkbox
ruleCheckbox returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='checkbox'
		{
			newLeafNode(otherlv_0, grammarAccess.getCheckboxAccess().getCheckboxKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getCheckboxAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCheckboxRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCheckboxAccess().getValueListValueParserRuleCall_2_0());
				}
				lv_value_2_0=ruleListValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCheckboxRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"org.xtext.example.mydsl.Browser.ListValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_class_3_0=RULE_STRING
				{
					newLeafNode(lv_class_3_0, grammarAccess.getCheckboxAccess().getClassSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCheckboxRule());
					}
					setWithLastConsumed(
						$current,
						"class",
						lv_class_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleCombobox
entryRuleCombobox returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComboboxRule()); }
	iv_ruleCombobox=ruleCombobox
	{ $current=$iv_ruleCombobox.current; }
	EOF;

// Rule Combobox
ruleCombobox returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='combobox'
		{
			newLeafNode(otherlv_0, grammarAccess.getComboboxAccess().getComboboxKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getComboboxAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComboboxRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getComboboxAccess().getValueListValueParserRuleCall_2_0());
				}
				lv_value_2_0=ruleListValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComboboxRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"org.xtext.example.mydsl.Browser.ListValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_class_3_0=RULE_STRING
				{
					newLeafNode(lv_class_3_0, grammarAccess.getComboboxAccess().getClassSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComboboxRule());
					}
					setWithLastConsumed(
						$current,
						"class",
						lv_class_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleListValue
entryRuleListValue returns [String current=null]:
	{ newCompositeNode(grammarAccess.getListValueRule()); }
	iv_ruleListValue=ruleListValue
	{ $current=$iv_ruleListValue.current.getText(); }
	EOF;

// Rule ListValue
ruleListValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getListValueAccess().getSTRINGTerminalRuleCall());
		}
	)*
;

// Entry rule entryRuleImage
entryRuleImage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImageRule()); }
	iv_ruleImage=ruleImage
	{ $current=$iv_ruleImage.current; }
	EOF;

// Rule Image
ruleImage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='image'
		{
			newLeafNode(otherlv_0, grammarAccess.getImageAccess().getImageKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getImageAccess().getValueWebElementVarReferenceParserRuleCall_1_0());
				}
				lv_value_1_0=ruleWebElementVarReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImageRule());
					}
					set(
						$current,
						"value",
						lv_value_1_0,
						"org.xtext.example.mydsl.Browser.WebElementVarReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_class_2_0=RULE_STRING
				{
					newLeafNode(lv_class_2_0, grammarAccess.getImageAccess().getClassSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImageRule());
					}
					setWithLastConsumed(
						$current,
						"class",
						lv_class_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleGo
entryRuleGo returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGoRule()); }
	iv_ruleGo=ruleGo
	{ $current=$iv_ruleGo.current; }
	EOF;

// Rule Go
ruleGo returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getGoAccess().getValWebDriverVarReferenceParserRuleCall_0_0());
				}
				lv_val_0_0=ruleWebDriverVarReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGoRule());
					}
					set(
						$current,
						"val",
						lv_val_0_0,
						"org.xtext.example.mydsl.Browser.WebDriverVarReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='.get('
		{
			newLeafNode(otherlv_1, grammarAccess.getGoAccess().getGetKeyword_1());
		}
		(
			(
				lv_url_2_0=RULE_STRING
				{
					newLeafNode(lv_url_2_0, grammarAccess.getGoAccess().getUrlSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGoRule());
					}
					setWithLastConsumed(
						$current,
						"url",
						lv_url_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3=');'
		{
			newLeafNode(otherlv_3, grammarAccess.getGoAccess().getRightParenthesisSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleContains
entryRuleContains returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContainsRule()); }
	iv_ruleContains=ruleContains
	{ $current=$iv_ruleContains.current; }
	EOF;

// Rule Contains
ruleContains returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getContainsAccess().getValWebElementVarReferenceParserRuleCall_0_0());
				}
				lv_val_0_0=ruleWebElementVarReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContainsRule());
					}
					set(
						$current,
						"val",
						lv_val_0_0,
						"org.xtext.example.mydsl.Browser.WebElementVarReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='.contains('
		{
			newLeafNode(otherlv_1, grammarAccess.getContainsAccess().getContainsKeyword_1());
		}
		(
			(
				lv_param_2_0=RULE_STRING
				{
					newLeafNode(lv_param_2_0, grammarAccess.getContainsAccess().getParamSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getContainsRule());
					}
					setWithLastConsumed(
						$current,
						"param",
						lv_param_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3=');'
		{
			newLeafNode(otherlv_3, grammarAccess.getContainsAccess().getRightParenthesisSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleInterractions
entryRuleInterractions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInterractionsRule()); }
	iv_ruleInterractions=ruleInterractions
	{ $current=$iv_ruleInterractions.current; }
	EOF;

// Rule Interractions
ruleInterractions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getInterractionsAccess().getClickParserRuleCall_0());
		}
		this_Click_0=ruleClick
		{
			$current = $this_Click_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInterractionsAccess().getInsertParserRuleCall_1());
		}
		this_Insert_1=ruleInsert
		{
			$current = $this_Insert_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInterractionsAccess().getCheckCheckboxParserRuleCall_2());
		}
		this_CheckCheckbox_2=ruleCheckCheckbox
		{
			$current = $this_CheckCheckbox_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInterractionsAccess().getClearCheckboxParserRuleCall_3());
		}
		this_ClearCheckbox_3=ruleClearCheckbox
		{
			$current = $this_ClearCheckbox_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInterractionsAccess().getSelectComboboxParserRuleCall_4());
		}
		this_SelectCombobox_4=ruleSelectCombobox
		{
			$current = $this_SelectCombobox_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleClick
entryRuleClick returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClickRule()); }
	iv_ruleClick=ruleClick
	{ $current=$iv_ruleClick.current; }
	EOF;

// Rule Click
ruleClick returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getClickAccess().getValWebElementVarReferenceParserRuleCall_0_0());
				}
				lv_val_0_0=ruleWebElementVarReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClickRule());
					}
					set(
						$current,
						"val",
						lv_val_0_0,
						"org.xtext.example.mydsl.Browser.WebElementVarReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='.click();'
		{
			newLeafNode(otherlv_1, grammarAccess.getClickAccess().getClickKeyword_1());
		}
	)
;

// Entry rule entryRuleFindProperty
entryRuleFindProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFindPropertyRule()); }
	iv_ruleFindProperty=ruleFindProperty
	{ $current=$iv_ruleFindProperty.current; }
	EOF;

// Rule FindProperty
ruleFindProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFindPropertyAccess().getValWebDriverVarReferenceParserRuleCall_0_0());
				}
				lv_val_0_0=ruleWebDriverVarReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFindPropertyRule());
					}
					set(
						$current,
						"val",
						lv_val_0_0,
						"org.xtext.example.mydsl.Browser.WebDriverVarReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='.findElement(By.'
		{
			newLeafNode(otherlv_1, grammarAccess.getFindPropertyAccess().getFindElementByKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getFindPropertyAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFindPropertyRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getFindPropertyAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				lv_param_4_0=RULE_STRING
				{
					newLeafNode(lv_param_4_0, grammarAccess.getFindPropertyAccess().getParamSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFindPropertyRule());
					}
					setWithLastConsumed(
						$current,
						"param",
						lv_param_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getFindPropertyAccess().getRightParenthesisKeyword_5());
		}
		otherlv_6=');'
		{
			newLeafNode(otherlv_6, grammarAccess.getFindPropertyAccess().getRightParenthesisSemicolonKeyword_6());
		}
	)
;

// Entry rule entryRuleFindFirstProperty
entryRuleFindFirstProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFindFirstPropertyRule()); }
	iv_ruleFindFirstProperty=ruleFindFirstProperty
	{ $current=$iv_ruleFindFirstProperty.current; }
	EOF;

// Rule FindFirstProperty
ruleFindFirstProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFindFirstPropertyAccess().getValWebDriverVarReferenceParserRuleCall_0_0());
				}
				lv_val_0_0=ruleWebDriverVarReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFindFirstPropertyRule());
					}
					set(
						$current,
						"val",
						lv_val_0_0,
						"org.xtext.example.mydsl.Browser.WebDriverVarReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='.findFirstElement(By.'
		{
			newLeafNode(otherlv_1, grammarAccess.getFindFirstPropertyAccess().getFindFirstElementByKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getFindFirstPropertyAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFindFirstPropertyRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getFindFirstPropertyAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				lv_param_4_0=RULE_STRING
				{
					newLeafNode(lv_param_4_0, grammarAccess.getFindFirstPropertyAccess().getParamSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFindFirstPropertyRule());
					}
					setWithLastConsumed(
						$current,
						"param",
						lv_param_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getFindFirstPropertyAccess().getRightParenthesisKeyword_5());
		}
		otherlv_6=');'
		{
			newLeafNode(otherlv_6, grammarAccess.getFindFirstPropertyAccess().getRightParenthesisSemicolonKeyword_6());
		}
	)
;

// Entry rule entryRuleFindSecondProperty
entryRuleFindSecondProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFindSecondPropertyRule()); }
	iv_ruleFindSecondProperty=ruleFindSecondProperty
	{ $current=$iv_ruleFindSecondProperty.current; }
	EOF;

// Rule FindSecondProperty
ruleFindSecondProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFindSecondPropertyAccess().getValWebDriverVarReferenceParserRuleCall_0_0());
				}
				lv_val_0_0=ruleWebDriverVarReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFindSecondPropertyRule());
					}
					set(
						$current,
						"val",
						lv_val_0_0,
						"org.xtext.example.mydsl.Browser.WebDriverVarReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='.findSecondElement(By.'
		{
			newLeafNode(otherlv_1, grammarAccess.getFindSecondPropertyAccess().getFindSecondElementByKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getFindSecondPropertyAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFindSecondPropertyRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getFindSecondPropertyAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				lv_param_4_0=RULE_STRING
				{
					newLeafNode(lv_param_4_0, grammarAccess.getFindSecondPropertyAccess().getParamSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFindSecondPropertyRule());
					}
					setWithLastConsumed(
						$current,
						"param",
						lv_param_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getFindSecondPropertyAccess().getRightParenthesisKeyword_5());
		}
		otherlv_6=');'
		{
			newLeafNode(otherlv_6, grammarAccess.getFindSecondPropertyAccess().getRightParenthesisSemicolonKeyword_6());
		}
	)
;

// Entry rule entryRuleGetTitle
entryRuleGetTitle returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGetTitleRule()); }
	iv_ruleGetTitle=ruleGetTitle
	{ $current=$iv_ruleGetTitle.current; }
	EOF;

// Rule GetTitle
ruleGetTitle returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getGetTitleAccess().getValWebElementVarReferenceParserRuleCall_0_0());
				}
				lv_val_0_0=ruleWebElementVarReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGetTitleRule());
					}
					set(
						$current,
						"val",
						lv_val_0_0,
						"org.xtext.example.mydsl.Browser.WebElementVarReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='.getTitle()'
		{
			newLeafNode(otherlv_1, grammarAccess.getGetTitleAccess().getGetTitleKeyword_1());
		}
	)
;

// Entry rule entryRuleInsert
entryRuleInsert returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInsertRule()); }
	iv_ruleInsert=ruleInsert
	{ $current=$iv_ruleInsert.current; }
	EOF;

// Rule Insert
ruleInsert returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getInsertAccess().getValWebElementVarReferenceParserRuleCall_0_0());
				}
				lv_val_0_0=ruleWebElementVarReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInsertRule());
					}
					set(
						$current,
						"val",
						lv_val_0_0,
						"org.xtext.example.mydsl.Browser.WebElementVarReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='.insert('
		{
			newLeafNode(otherlv_1, grammarAccess.getInsertAccess().getInsertKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getInsertAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInsertRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=');'
		{
			newLeafNode(otherlv_3, grammarAccess.getInsertAccess().getRightParenthesisSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleCheckCheckbox
entryRuleCheckCheckbox returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCheckCheckboxRule()); }
	iv_ruleCheckCheckbox=ruleCheckCheckbox
	{ $current=$iv_ruleCheckCheckbox.current; }
	EOF;

// Rule CheckCheckbox
ruleCheckCheckbox returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCheckCheckboxAccess().getValWebElementVarReferenceParserRuleCall_0_0());
				}
				lv_val_0_0=ruleWebElementVarReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCheckCheckboxRule());
					}
					set(
						$current,
						"val",
						lv_val_0_0,
						"org.xtext.example.mydsl.Browser.WebElementVarReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='.check();'
		{
			newLeafNode(otherlv_1, grammarAccess.getCheckCheckboxAccess().getCheckKeyword_1());
		}
	)
;

// Entry rule entryRuleClearCheckbox
entryRuleClearCheckbox returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClearCheckboxRule()); }
	iv_ruleClearCheckbox=ruleClearCheckbox
	{ $current=$iv_ruleClearCheckbox.current; }
	EOF;

// Rule ClearCheckbox
ruleClearCheckbox returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getClearCheckboxAccess().getValWebDriverVarReferenceParserRuleCall_0_0());
				}
				lv_val_0_0=ruleWebDriverVarReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClearCheckboxRule());
					}
					set(
						$current,
						"val",
						lv_val_0_0,
						"org.xtext.example.mydsl.Browser.WebDriverVarReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='.clearCheckBox();'
		{
			newLeafNode(otherlv_1, grammarAccess.getClearCheckboxAccess().getClearCheckBoxKeyword_1());
		}
	)
;

// Entry rule entryRuleSelectCombobox
entryRuleSelectCombobox returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectComboboxRule()); }
	iv_ruleSelectCombobox=ruleSelectCombobox
	{ $current=$iv_ruleSelectCombobox.current; }
	EOF;

// Rule SelectCombobox
ruleSelectCombobox returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectComboboxAccess().getValWebElementVarReferenceParserRuleCall_0_0());
				}
				lv_val_0_0=ruleWebElementVarReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectComboboxRule());
					}
					set(
						$current,
						"val",
						lv_val_0_0,
						"org.xtext.example.mydsl.Browser.WebElementVarReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='.select('
		{
			newLeafNode(otherlv_1, grammarAccess.getSelectComboboxAccess().getSelectKeyword_1());
		}
		(
			(
				lv_param_2_0=RULE_STRING
				{
					newLeafNode(lv_param_2_0, grammarAccess.getSelectComboboxAccess().getParamSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSelectComboboxRule());
					}
					setWithLastConsumed(
						$current,
						"param",
						lv_param_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3=');'
		{
			newLeafNode(otherlv_3, grammarAccess.getSelectComboboxAccess().getRightParenthesisSemicolonKeyword_3());
		}
	)
;

fragment RULE_PROTOCOL : ('http'|'https') '://';

fragment RULE_EXTENTION : ('fr'|'com');

fragment RULE_DOMAIN : RULE_STRING ('.' RULE_STRING)* '.' RULE_EXTENTION;

fragment RULE_PATH : ('/'|('/' RULE_STRING)*);

RULE_URL : RULE_PROTOCOL RULE_DOMAIN RULE_PATH;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
